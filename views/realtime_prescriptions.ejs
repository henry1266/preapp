<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/dashboard.css" />
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 5px;
      background-color: #f4f4f4;
      color: #333;
      position: relative;
    }
    h2 {
      color: #0056b3;
      text-align: center;
    }
    .container {
      display: flex;
      gap: 4px;
      margin-top: 4px;
    }
    #leftColumn {
      flex: 1;
      background-color: #fff;
      padding: 4px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    #rightColumn {
      flex: 1;
      background-color: #ffffff80;
      padding: 4px;
      border-radius: 8px;
      border: 4px dashed #ccc;
      color: #333;
    }
    .prescription-info p {
      margin: 4px 0;
      font-size: 1rem;
    }
    .prescription-info strong {
      color: #0056b3;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 4px;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 4px;
      text-align: left;
    }
    th {
      background-color: #e9ecef;
      color: #495057;
    }
    .no-data {
      color: #777;
      text-align: center;
      font-size: 1rem;
      padding: 4px;
    }
    
    /* 按鈕容器樣式 */
    .button-container {
      position: absolute;
      top: 3px;
      right: 10px;
      z-index: 100;
    }
    
    /* 搜尋按鈕容器樣式 */
    .search-button-container {
      position: absolute;
      top: 3px;
      left: 10px;
      z-index: 100;
    }
    
    /* 按鈕基本樣式 */
    .action-btn {
      border: none;
      padding: 8px 15px;
      border-radius: 4px;
      cursor: pointer;
      margin-left: 10px;
      transition: transform 0.2s, box-shadow 0.2s;
    }
    
    /* 取消按鈕樣式 */
    #cancelBtn {
      background-color: #dc3545;
      color: white;
    }
    
    /* 改單按鈕樣式 */
    #modifyBtn {
      background-color: #ffc107;
      color: black;
    }
    
    /* 搜尋按鈕樣式 */
    #searchBtn {
      background-color: #007bff;
      color: white;
    }
    
    /* 閃爍動畫 */
    @keyframes flash {
      0% { opacity: 1; }
      25% { opacity: 0.5; }
      50% { opacity: 1; }
      75% { opacity: 0.5; }
      100% { opacity: 1; }
    }
    
    .flash-animation {
      animation: flash 0.5s;
    }
    
    /* 模態視窗樣式 */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.4);
    }
    
    .modal-content {
      background-color: #fefefe;
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #888;
      border-radius: 8px;
      width: 80%;
      max-height: 80vh;
      overflow-y: auto;
    }
    
    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #ddd;
      padding-bottom: 10px;
      margin-bottom: 15px;
    }
    
    .modal-title {
      font-size: 1.5rem;
      color: #0056b3;
      margin: 0;
    }
    
    .close-modal {
      color: #aaa;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }
    
    .close-modal:hover,
    .close-modal:focus {
      color: #000;
      text-decoration: none;
    }
    
    .prescription-date-group {
      margin-bottom: 20px;
      border-bottom: 1px solid #eee;
      padding-bottom: 10px;
    }
    
    .prescription-date {
      font-size: 1.2rem;
      font-weight: bold;
      color: #0056b3;
      margin-bottom: 10px;
    }
    
    /* 摺疊處方樣式 */
    .prescription-item {
      margin-bottom: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      overflow: hidden;
    }
    
    .prescription-header {
      background-color: #f8f9fa;
      padding: 10px 15px;
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #ddd;
    }
    
    .prescription-header:hover {
      background-color: #e9ecef;
    }
    
    .prescription-header h4 {
      margin: 0;
      font-size: 1rem;
      color: #495057;
    }
    
    .prescription-content {
      padding: 0;
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.3s ease-out;
    }
    
    .prescription-content.active {
      max-height: 1000px;
      padding: 15px;
      transition: max-height 0.5s ease-in;
    }
    
    .toggle-icon {
      font-size: 1.2rem;
      transition: transform 0.3s;
    }
    
    .toggle-icon.active {
      transform: rotate(180deg);
    }
    
    /* 響應式設計 */
    @media screen and (min-width: 1024px) {
      /* 大螢幕 */
      .action-btn {
        padding: 12px 20px;
        font-size: 1.2rem;
      }
    }
    
    @media screen and (max-width: 768px) {
      /* 小螢幕 */
      .button-container {
        display: none;
      }
      
      .modal-content {
        width: 95%;
        margin: 10% auto;
      }
    }
  </style>
</head>
<body>
  <h2><%= title %></h2>

  <!-- 新增按鈕列 - 移至右上角 -->
  <div class="button-container">
    <button id="cancelBtn" class="action-btn">取消</button>
    <button id="modifyBtn" class="action-btn">改單</button>
  </div>
  
  <!-- 新增搜尋按鈕 - 左上角 -->
  <div class="search-button-container">
    <button id="searchBtn" class="action-btn">查詢處方紀錄</button>
  </div>
  
  <!-- 處方紀錄模態視窗 -->
  <div id="prescriptionHistoryModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">病患處方紀錄</h3>
        <span class="close-modal">&times;</span>
      </div>
      <div id="prescriptionHistoryContent">
        <p class="no-data">載入中，請稍候...</p>
      </div>
    </div>
  </div>

  <div class="container">
    <div id="leftColumn">
      <div id="prescriptionDetailsContainer">
        <p class="no-data">等待處方資料更新...</p>
      </div>
    </div>
    <div id="rightColumn">
      <div id="rightInfoBox">
        <p class="no-data">尚無處方資訊</p>
      </div>
    </div>
  </div>

  <!-- 引入html2canvas庫 -->
  <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const prescriptionDetailsContainer = document.getElementById('prescriptionDetailsContainer');
    const rightInfoBox = document.getElementById('rightInfoBox');
    const leftColumn = document.getElementById('leftColumn');
    const cancelBtn = document.getElementById('cancelBtn');
    const modifyBtn = document.getElementById('modifyBtn');
    
    // 全域變數，用於存儲當前顯示的處方資訊
    let currentPrescription = null;
    
    // 預加載音效
    const cancelSound = new Audio('/sounds/cancel_alert.mp3');
    const modifySound = new Audio('/sounds/modify_alert.mp3');
    
    // 閃爍動畫函數 - 增強版
    function flashScreen(color) {
      // 移除可能存在的動畫類別
      document.body.classList.remove('flash-animation');
      
      // 保存原始背景色
      const originalColor = document.body.style.backgroundColor;
      
      // 設置新的背景色
      document.body.style.backgroundColor = color;
      
      // 強制重繪以確保動畫重置
      void document.body.offsetWidth;
      
      // 添加動畫類別
      document.body.classList.add('flash-animation');
      
      // 動畫結束後恢復原始背景色
      setTimeout(() => {
        document.body.classList.remove('flash-animation');
        // 不立即恢復，保持顏色一段時間
      }, 500); // 與 CSS 動畫時間一致
      
      // 3秒後恢復原始背景色
      setTimeout(() => {
        document.body.style.backgroundColor = '#f4f4f4';
      }, 3000);
    }
    
    // 按鈕特效函數
    function buttonEffect(button, color) {
      // 保存原始樣式
      const originalBgColor = button.style.backgroundColor;
      const originalTransform = button.style.transform;
      const originalBoxShadow = button.style.boxShadow;
      
      // 應用特效
      button.style.transform = 'scale(1.2)';
      button.style.boxShadow = '0 0 15px ' + color;
      
      // 恢復原始樣式
      setTimeout(() => {
        button.style.transform = originalTransform;
        button.style.boxShadow = originalBoxShadow;
      }, 300);
    }
    
    // 按鈕點擊事件
    cancelBtn.addEventListener('click', function() {
      // 播放取消音效
      cancelSound.play();
      
      // 觸發按鈕特效
      buttonEffect(cancelBtn, '#ff0000');
      
      // 觸發閃爍動畫
      flashScreen('#ffcccc');
      
      // 發送取消事件到伺服器
      socket.emit('prescription_cancel');
    });
    
    modifyBtn.addEventListener('click', function() {
      // 播放改單音效
      modifySound.play();
      
      // 觸發按鈕特效
      buttonEffect(modifyBtn, '#ffcc00');
      
      // 觸發閃爍動畫
      flashScreen('#ffffcc');
      
      // 發送改單事件到伺服器
      socket.emit('prescription_modify');
    });
    
    // 接收取消事件
    socket.on('prescription_cancel_broadcast', function() {
      // 播放取消音效
      cancelSound.play();
      
      // 觸發閃爍動畫
      flashScreen('#ffcccc');
      
      // 觸發按鈕特效
      buttonEffect(cancelBtn, '#ff0000');
    });
    
    // 接收改單事件
    socket.on('prescription_modify_broadcast', function() {
      // 播放改單音效
      modifySound.play();
      
      // 觸發閃爍動畫
      flashScreen('#ffffcc');
      
      // 觸發按鈕特效
      buttonEffect(modifyBtn, '#ffcc00');
    });
    
    // 接收重置事件
    socket.on('prescription_reset_broadcast', function() {
      // 恢復原始背景顏色
      document.body.style.backgroundColor = '#f4f4f4';
    });

    // 自動將左側區域儲存為PNG的函數
    function saveLeftColumnAsPNG(prescription) {
      // 確保有處方資料才進行截圖
      if (!prescription || Object.keys(prescription).length === 0) {
        return;
      }

      // 使用setTimeout確保DOM已完全渲染
      setTimeout(() => {
        html2canvas(leftColumn, {
          backgroundColor: '#fff',
          scale: 2, // 提高解析度
          logging: false,
          useCORS: true
        }).then(canvas => {
          // 創建下載連結
          const link = document.createElement('a');
          // 使用處方ID和時間戳作為檔名
          const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
          const patientName = prescription.patientName || prescription.name || 'unknown';
          const fileName = `處方_${patientName}_${timestamp}.png`;
          
          // 將canvas轉換為blob並下載
          canvas.toBlob(function(blob) {
            link.href = URL.createObjectURL(blob);
            link.download = fileName;
            link.click();
            // 釋放URL物件
            setTimeout(() => URL.revokeObjectURL(link.href), 5000);
          }, 'image/png');
        }).catch(err => {
          console.error('截圖過程中發生錯誤:', err);
        });
      }, 500); // 等待500毫秒確保DOM已渲染完成
    }

    function renderPrescription(prescription) {
      prescriptionDetailsContainer.innerHTML = '';
      rightInfoBox.innerHTML = '';

      if (!prescription || Object.keys(prescription).length === 0) {
        prescriptionDetailsContainer.innerHTML = '<p class="no-data">等待處方資料更新...</p>';
        rightInfoBox.innerHTML = '<p class="no-data">尚無處方資訊</p>';
        currentPrescription = null;
        return;
      }
      
      // 更新當前處方資訊到全域變數
      currentPrescription = prescription;

      // 左側基本資訊 + 藥品表格
      const infoDiv = document.createElement('div');
      infoDiv.classList.add('prescription-info');

      let content = '';
      content += `<p><strong>病患姓名:</strong> ${prescription.patientName || prescription.name || 'N/A'}`;
      content += `<strong>   身分證字號:</strong> ${prescription.pid || 'N/A'}`;
      content += `<strong>   日期:</strong> ${prescription.date ? new Date(prescription.date).toLocaleString() : 'N/A'}</p>`;
      if (prescription.status) content += `<p><strong>狀態:</strong> ${prescription.status}</p>`;
      infoDiv.innerHTML = content;
      prescriptionDetailsContainer.appendChild(infoDiv);

      // 藥品表格
      if (prescription.medications && Array.isArray(prescription.medications) && prescription.medications.length > 0) {
        const table = document.createElement('table');
        const thead = document.createElement('thead');        const tbody = document.createElement('tbody');

        const headerRow = document.createElement('tr');
        ['編號', '藥品名稱', '健保碼',  '頻率', '數量'].forEach(text => { // Added number and frequency to header
          const th = document.createElement('th');
          th.textContent = text;
          headerRow.appendChild(th);
        });
        thead.appendChild(headerRow);
        table.appendChild(thead);     
        
        // 先對藥品進行排序，PRN排最下面，HS次之
        const sortedMedications = [...prescription.medications].sort((a, b) => {
          const freqA = a.frequency || 'N/A';
          const freqB = b.frequency || 'N/A';
          
          // PRN 排最後
          if (freqA === 'PRN' && freqB !== 'PRN') return 1;
          if (freqA !== 'PRN' && freqB === 'PRN') return -1;
          
          // HS 排次後
          if (freqA === 'HS' && freqB !== 'HS' && freqB !== 'PRN') return 1;
          if (freqA !== 'HS' && freqA !== 'PRN' && freqB === 'HS') return -1;
          
          // 其他情況維持原順序
          return 0;
        });
        
        // 使用排序後的藥品陣列，並帶入索引，以便加入編號
        sortedMedications.forEach((med, index) => {
          const row = document.createElement('tr');
          const number = index + 1; // 從1開始的編號
          const name = med.dname || 'N/A';
          const code = med.dinsuranceCode || 'N/A';
          const frequency = med.frequency || 'N/A'; // Added frequency data
          const quantity = med.dcount || 0;
          
          // 檢查頻率是否為PRN或HS，設定對應底色
          if (frequency === 'PRN') {
            row.style.backgroundColor = '#e6f7ff'; // 淺藍色背景
          } else if (frequency === 'HS') {
            row.style.backgroundColor = '#ffe6cc'; // 淺橘色背景
          }
          
          // 將編號加入資料陣列的第一個位置
          [number, name, code, frequency, quantity].forEach(text => { // Added number and frequency to row data
            const td = document.createElement('td');
            td.textContent = text;
            row.appendChild(td);
          });
          tbody.appendChild(row);
        });

        table.appendChild(tbody);
        prescriptionDetailsContainer.appendChild(table);
      } else {
        const noMedsP = document.createElement('p');
        noMedsP.textContent = '無藥品資訊。';
        prescriptionDetailsContainer.appendChild(noMedsP);
      }

      // 右側顯示「處方 ID」與「詳情」
      let rightContent = '';
      if (prescription.plusday && prescription.plusday !== 0) {
        const plusdayDisplay = `+++${prescription.plusday}天+++`;
        rightContent += `<p><strong style="color: red;">特殊註記 :</strong> ${plusdayDisplay}</p>`;
      }
      rightContent += `<p><strong>處方 ID:</strong> ${prescription._id || 'N/A'}</p>`;
      if (prescription.details) rightContent += `<p><strong>詳情:</strong> ${prescription.details}</p>`;
      rightInfoBox.innerHTML = rightContent;

      // 在渲染完成後自動儲存為PNG
      saveLeftColumnAsPNG(prescription);
    }

    socket.on('connect', () => {
      console.log('Connected to Socket.IO server!');
    });

    socket.on('initial_prescriptions', (initialDataArray) => {
      console.log('Received initial prescriptions:', initialDataArray);
      if (initialDataArray && initialDataArray.length > 0) {
        const latestInitial = initialDataArray.sort((a, b) => new Date(b.date || 0) - new Date(a.date || 0))[0];
        renderPrescription(latestInitial);
      } else {
        prescriptionDetailsContainer.innerHTML = '<p class="no-data">目前無處方資料。</p>';
        rightInfoBox.innerHTML = '<p class="no-data">尚無處方資訊</p>';
      }
    });

    socket.on('prescription_update', (newPrescription) => {
      console.log('Received prescription update:', newPrescription);
      renderPrescription(newPrescription);
    });

    socket.on('disconnect', () => {
      console.log('Disconnected from Socket.IO server.');
    });
    
    // 處方紀錄模態視窗相關功能
    const searchBtn = document.getElementById('searchBtn');
    const prescriptionHistoryModal = document.getElementById('prescriptionHistoryModal');
    const closeModal = document.querySelector('.close-modal');
    const prescriptionHistoryContent = document.getElementById('prescriptionHistoryContent');
    
    // 開啟模態視窗
    searchBtn.addEventListener('click', function() {
      // 顯示模態視窗
      prescriptionHistoryModal.style.display = 'block';
      
      // 觸發按鈕特效
      buttonEffect(searchBtn, '#007bff');
      
      // 載入處方紀錄
      fetchPrescriptionHistory();
    });
    
    // 關閉模態視窗
    closeModal.addEventListener('click', function() {
      prescriptionHistoryModal.style.display = 'none';
    });
    
    // 點擊模態視窗外部關閉
    window.addEventListener('click', function(event) {
      if (event.target === prescriptionHistoryModal) {
        prescriptionHistoryModal.style.display = 'none';
      }
    });
    
    // 獲取處方紀錄
    function fetchPrescriptionHistory() {
      prescriptionHistoryContent.innerHTML = '<p class="no-data">載入中，請稍候...</p>';
      
      // 檢查是否有當前顯示的處方資訊
      if (!currentPrescription) {
        prescriptionHistoryContent.innerHTML = '<p class="no-data">目前無病患資訊，無法查詢</p>';
        return;
      }
      
      // 從當前處方資訊中獲取病患ID
      const patientId = currentPrescription.patientId || currentPrescription.pid;
      
      if (!patientId) {
        prescriptionHistoryContent.innerHTML = '<p class="no-data">無法獲取病患ID，無法查詢</p>';
        return;
      }
      
      // 使用 fetch API 獲取處方紀錄 - 使用新的 JSON API 端點
      fetch('/searchPrescriptions/api/patient-prescriptions?pid=' + patientId)
        .then(response => {
          if (!response.ok) {
            throw new Error('網路回應不正常');
          }
          return response.json();
        })
        .then(data => {
          renderPrescriptionHistory(data);
        })
        .catch(error => {
          console.error('獲取處方紀錄時發生錯誤:', error);
          prescriptionHistoryContent.innerHTML = `<p class="no-data">獲取處方紀錄失敗: ${error.message}</p>`;
        });
    }
    
    // 渲染處方紀錄
    function renderPrescriptionHistory(data) {
      // 檢查是否有資料
      if (!data || data.length === 0) {
        prescriptionHistoryContent.innerHTML = '<p class="no-data">無處方紀錄</p>';
        return;
      }
      
      // 清空內容區域
      prescriptionHistoryContent.innerHTML = '';
      
      // 按日期分組並排序（由新到舊）
      const groupedByDate = {};
      
      // 將資料按日期分組
      data.forEach(prescription => {
        // 取得日期（格式化為 YYYYMMDD）
        const date = prescription.date ? new Date(prescription.date) : new Date();
        const dateString = date.getFullYear() +
                          String(date.getMonth() + 1).padStart(2, '0') +
                          String(date.getDate()).padStart(2, '0');
        
        if (!groupedByDate[dateString]) {
          groupedByDate[dateString] = [];
        }
        
        groupedByDate[dateString].push(prescription);
      });
      
      // 將日期排序（由新到舊）
      const sortedDates = Object.keys(groupedByDate).sort((a, b) => b - a);
      
      // 為每個日期創建一個區塊
      sortedDates.forEach(dateString => {
        const prescriptions = groupedByDate[dateString];
        
        // 對同一日期的處方按 predate 數字排序（由大到小）
        prescriptions.sort((a, b) => {
          // 將 predate 轉為數字進行比較，若無 predate 則給予 0
          const predateA = a.predate ? parseInt(a.predate, 10) : 0;
          const predateB = b.predate ? parseInt(b.predate, 10) : 0;
          return predateB - predateA; // 由大到小排序
        });
        
        // 創建日期分組容器
        const dateGroup = document.createElement('div');
        dateGroup.classList.add('prescription-date-group');
        
        // 格式化日期顯示
        const year = dateString.substring(0, 4);
        const month = dateString.substring(4, 6);
        const day = dateString.substring(6, 8);
        const formattedDate = `就診日期 ${year}/${month}/${day}`;
        
        // 添加日期標題
        const dateTitle = document.createElement('div');
        dateTitle.classList.add('prescription-date');
        dateTitle.textContent = "12345";
        //dateGroup.appendChild(dateTitle);
        
        // 遍歷該日期的所有處方
        prescriptions.forEach((prescription, index) => {
          // 創建處方項目容器
          const prescriptionItem = document.createElement('div');
          prescriptionItem.classList.add('prescription-item');
          
          // 創建處方標題
          const prescriptionHeader = document.createElement('div');
          prescriptionHeader.classList.add('prescription-header');
          
          // 處方標題內容
          const prescriptionTitle = document.createElement('h4');
          // 直接使用資料庫中的 predate 欄位作為處方日期
          const formattedDate = prescription.predate || '';
          const medicationCount = prescription.medications && Array.isArray(prescription.medications) ? prescription.medications.length : 0;
          prescriptionTitle.textContent = `處方 #${index + 1} ${formattedDate} (${medicationCount} 項藥品)`;
          
          // 如果是第一筆處方（最新的），將標題文字變色
          if (index === 0) {
            prescriptionTitle.style.color = '#e74c3c'; // 紅色
            prescriptionTitle.style.fontWeight = 'bold'; // 加粗
          }
          
          // 添加展開/收合圖標
          const toggleIcon = document.createElement('span');
          toggleIcon.classList.add('toggle-icon');
          toggleIcon.innerHTML = '&#9660;'; // 向下箭頭
          
          // 將標題和圖標添加到標題容器
          prescriptionHeader.appendChild(prescriptionTitle);
          prescriptionHeader.appendChild(toggleIcon);
          
          // 創建處方內容容器
          const prescriptionContent = document.createElement('div');
          prescriptionContent.classList.add('prescription-content');
          
          // 添加處方詳細資訊
          if (prescription._id) {
            const prescriptionInfo = document.createElement('p');
            prescriptionInfo.innerHTML = `<strong>處方 ID:</strong> ${prescription._id}`;
            if (prescription.details) {
              prescriptionInfo.innerHTML += `<br><strong>詳情:</strong> ${prescription.details}`;
            }
            prescriptionContent.appendChild(prescriptionInfo);
          }
          
          // 檢查是否有藥品資料
          if (prescription.medications && Array.isArray(prescription.medications) && prescription.medications.length > 0) {
            // 創建藥品表格
            const table = document.createElement('table');
            table.style.width = '100%';
            
            // 添加表頭
            const thead = document.createElement('thead');
            const headerRow = document.createElement('tr');
            ['藥品名稱', '健保碼', '頻率', '數量', '單價', '總成本'].forEach(text => {
              const th = document.createElement('th');
              th.textContent = text;
              headerRow.appendChild(th);
            });
            thead.appendChild(headerRow);
            table.appendChild(thead);
            
            // 添加表格內容
            const tbody = document.createElement('tbody');
            
            // 遍歷藥品
            prescription.medications.forEach(med => {
              const row = document.createElement('tr');
              
              // 藥品名稱
              const nameCell = document.createElement('td');
              nameCell.textContent = med.dname || 'N/A';
              row.appendChild(nameCell);
              
              // 健保碼
              const codeCell = document.createElement('td');
              codeCell.textContent = med.dinsuranceCode || 'N/A';
              row.appendChild(codeCell);
              
              // 頻率
              const freqCell = document.createElement('td');
              freqCell.textContent = med.frequency || 'N/A';
              row.appendChild(freqCell);
              
              // 數量
              const quantityCell = document.createElement('td');
              quantityCell.textContent = med.dcount || '0';
              row.appendChild(quantityCell);
              
              // 單價
              const priceCell = document.createElement('td');
              priceCell.textContent = (med.unitPrice || 0).toFixed(2);
              row.appendChild(priceCell);
              
              // 藥品總成本
              const costCell = document.createElement('td');
              const cost = med.totalCost || (med.unitPrice ? med.unitPrice * med.dcount : 0);
              costCell.textContent = cost.toFixed(2);
              row.appendChild(costCell);
              
              tbody.appendChild(row);
            });
            
            table.appendChild(tbody);
            prescriptionContent.appendChild(table);
          } else {
            const noMedsP = document.createElement('p');
            noMedsP.textContent = '無藥品資訊';
            prescriptionContent.appendChild(noMedsP);
          }
          
          // 將標題和內容添加到處方項目
          prescriptionItem.appendChild(prescriptionHeader);
          prescriptionItem.appendChild(prescriptionContent);
          
          // 添加點擊事件處理
          prescriptionHeader.addEventListener('click', function() {
            prescriptionContent.classList.toggle('active');
            toggleIcon.classList.toggle('active');
          });
          
          // 添加處方項目到日期分組
          dateGroup.appendChild(prescriptionItem);
        });
        
        // 添加日期分組到內容區域
        prescriptionHistoryContent.appendChild(dateGroup);
      });
      
      // 預設展開第一個處方
      const firstPrescription = document.querySelector('.prescription-content');
      const firstToggleIcon = document.querySelector('.toggle-icon');
      if (firstPrescription && firstToggleIcon) {
        firstPrescription.classList.add('active');
        firstToggleIcon.classList.add('active');
      }
    }
  </script>
</body>
</html>
