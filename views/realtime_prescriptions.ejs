<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/dashboard.css" />
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 10px;
      background-color: #f4f4f4;
      color: #333;
    }
    h2 {
      color: #0056b3;
      text-align: center;
    }
    .container {
      display: flex;
      gap: 5px;
      margin-top: 5px;
    }
    #leftColumn {
      flex: 1;
      background-color: #fff;
      padding: 5px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    #rightColumn {
      flex: 1;
      background-color: #ffffff80;
      padding: 5px;
      border-radius: 8px;
      border: 2px dashed #ccc;
      color: #333;
    }
    .prescription-info p {
      margin: 5px 0;
      font-size: 1rem;
    }
    .prescription-info strong {
      color: #0056b3;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 5px;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 5px;
      text-align: left;
    }
    th {
      background-color: #e9ecef;
      color: #495057;
    }
    .no-data {
      color: #777;
      text-align: center;
      font-size: 1rem;
      padding: 5px;
    }
  </style>
</head>
<body>
  <h2><%= title %></h2>

  <div class="container">
    <div id="leftColumn">
      <div id="prescriptionDetailsContainer">
        <p class="no-data">等待處方資料更新...</p>
      </div>
    </div>
    <div id="rightColumn">
      <div id="rightInfoBox">
        <p class="no-data">尚無處方資訊</p>
      </div>
    </div>
  </div>

  <!-- 引入html2canvas庫 -->
  <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const prescriptionDetailsContainer = document.getElementById('prescriptionDetailsContainer');
    const rightInfoBox = document.getElementById('rightInfoBox');
    const leftColumn = document.getElementById('leftColumn');

    // 自動將左側區域儲存為PNG的函數
    function saveLeftColumnAsPNG(prescription) {
      // 確保有處方資料才進行截圖
      if (!prescription || Object.keys(prescription).length === 0) {
        return;
      }

      // 使用setTimeout確保DOM已完全渲染
      setTimeout(() => {
        html2canvas(leftColumn, {
          backgroundColor: '#fff',
          scale: 2, // 提高解析度
          logging: false,
          useCORS: true
        }).then(canvas => {
          // 創建下載連結
          const link = document.createElement('a');
          // 使用處方ID和時間戳作為檔名
          const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
          const patientName = prescription.patientName || prescription.name || 'unknown';
          const fileName = `處方_${patientName}_${timestamp}.png`;
          
          // 將canvas轉換為blob並下載
          canvas.toBlob(function(blob) {
            link.href = URL.createObjectURL(blob);
            link.download = fileName;
            link.click();
            // 釋放URL物件
            setTimeout(() => URL.revokeObjectURL(link.href), 5000);
          }, 'image/png');
        }).catch(err => {
          console.error('截圖過程中發生錯誤:', err);
        });
      }, 500); // 等待500毫秒確保DOM已渲染完成
    }

    function renderPrescription(prescription) {
      prescriptionDetailsContainer.innerHTML = '';
      rightInfoBox.innerHTML = '';

      if (!prescription || Object.keys(prescription).length === 0) {
        prescriptionDetailsContainer.innerHTML = '<p class="no-data">等待處方資料更新...</p>';
        rightInfoBox.innerHTML = '<p class="no-data">尚無處方資訊</p>';
        return;
      }

      // 左側基本資訊 + 藥品表格
      const infoDiv = document.createElement('div');
      infoDiv.classList.add('prescription-info');

      let content = '';
      content += `<p><strong>病患姓名:</strong> ${prescription.patientName || prescription.name || 'N/A'}`;
      content += `<strong>   日期:</strong> ${prescription.date ? new Date(prescription.date).toLocaleString() : 'N/A'}</p>`;
      if (prescription.status) content += `<p><strong>狀態:</strong> ${prescription.status}</p>`;
      infoDiv.innerHTML = content;
      prescriptionDetailsContainer.appendChild(infoDiv);

      // 藥品表格
      if (prescription.medications && Array.isArray(prescription.medications) && prescription.medications.length > 0) {
        const table = document.createElement('table');
        const thead = document.createElement('thead');        const tbody = document.createElement('tbody');

        const headerRow = document.createElement('tr');
        ['編號', '藥品名稱', '健保碼',  '頻率', '數量'].forEach(text => { // Added number and frequency to header
          const th = document.createElement('th');
          th.textContent = text;
          headerRow.appendChild(th);
        });
        thead.appendChild(headerRow);
        table.appendChild(thead);     
        
        // 先對藥品進行排序，PRN排最下面，HS次之
        const sortedMedications = [...prescription.medications].sort((a, b) => {
          const freqA = a.frequency || 'N/A';
          const freqB = b.frequency || 'N/A';
          
          // PRN 排最後
          if (freqA === 'PRN' && freqB !== 'PRN') return 1;
          if (freqA !== 'PRN' && freqB === 'PRN') return -1;
          
          // HS 排次後
          if (freqA === 'HS' && freqB !== 'HS' && freqB !== 'PRN') return 1;
          if (freqA !== 'HS' && freqA !== 'PRN' && freqB === 'HS') return -1;
          
          // 其他情況維持原順序
          return 0;
        });
        
        // 使用排序後的藥品陣列，並帶入索引，以便加入編號
        sortedMedications.forEach((med, index) => {
          const row = document.createElement('tr');
          const number = index + 1; // 從1開始的編號
          const name = med.dname || 'N/A';
          const code = med.dinsuranceCode || 'N/A';
          const frequency = med.frequency || 'N/A'; // Added frequency data
          const quantity = med.dcount || 0;
          
          // 檢查頻率是否為PRN或HS，設定對應底色
          if (frequency === 'PRN') {
            row.style.backgroundColor = '#e6f7ff'; // 淺藍色背景
          } else if (frequency === 'HS') {
            row.style.backgroundColor = '#ffe6cc'; // 淺橘色背景
          }
          
          // 將編號加入資料陣列的第一個位置
          [number, name, code, frequency, quantity].forEach(text => { // Added number and frequency to row data
            const td = document.createElement('td');
            td.textContent = text;
            row.appendChild(td);
          });
          tbody.appendChild(row);
        });

        table.appendChild(tbody);
        prescriptionDetailsContainer.appendChild(table);
      } else {
        const noMedsP = document.createElement('p');
        noMedsP.textContent = '無藥品資訊。';
        prescriptionDetailsContainer.appendChild(noMedsP);
      }

      // 右側顯示「處方 ID」與「詳情」
      let rightContent = '';
      if (prescription.plusday && prescription.plusday !== 0) {
        const plusdayDisplay = `+++${prescription.plusday}天+++`;
        rightContent += `<p><strong style="color: red;">特殊註記 :</strong> ${plusdayDisplay}</p>`;
      }
      rightContent += `<p><strong>處方 ID:</strong> ${prescription._id || 'N/A'}</p>`;
      if (prescription.details) rightContent += `<p><strong>詳情:</strong> ${prescription.details}</p>`;
      rightInfoBox.innerHTML = rightContent;

      // 在渲染完成後自動儲存為PNG
      saveLeftColumnAsPNG(prescription);
    }

    socket.on('connect', () => {
      console.log('Connected to Socket.IO server!');
    });

    socket.on('initial_prescriptions', (initialDataArray) => {
      console.log('Received initial prescriptions:', initialDataArray);
      if (initialDataArray && initialDataArray.length > 0) {
        const latestInitial = initialDataArray.sort((a, b) => new Date(b.date || 0) - new Date(a.date || 0))[0];
        renderPrescription(latestInitial);
      } else {
        prescriptionDetailsContainer.innerHTML = '<p class="no-data">目前無處方資料。</p>';
        rightInfoBox.innerHTML = '<p class="no-data">尚無處方資訊</p>';
      }
    });

    socket.on('prescription_update', (newPrescription) => {
      console.log('Received prescription update:', newPrescription);
      renderPrescription(newPrescription);
    });

    socket.on('disconnect', () => {
      console.log('Disconnected from Socket.IO server.');
    });
  </script>
</body>
</html>
